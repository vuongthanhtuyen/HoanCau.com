using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SweetCMS.DataAccess{
    public partial class SPs{
        
        /// <summary>
        /// Creates an object wrapper for the StoreNguoiDungTimKiemPhanTrang Procedure
        /// </summary>
        public static StoredProcedure StoreNguoiDungTimKiemPhanTrang(int? PageSize, int? PageIndex, string Key, bool? ASC, out int Totalrow)
        {
            Totalrow = 0;
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("StoreNguoiDungTimKiemPhanTrang", DataService.GetInstance("DataAcessProvider"), "dbo");

            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@Key", Key, DbType.String, null, null);

            sp.Command.AddParameter("@ASC", ASC, DbType.Boolean, null, null);

            sp.Command.AddOutputParameter("@total_row", DbType.Int32, 0, 10);
            return sp;
        }

        /// <summary>
        /// Creates an object wrapper for the StoreNguoiDungTimKiemPhanTrang Procedure
        /// </summary>
        public static StoredProcedure StoreDanhMucTimKiemPhanTrang(int? PageSize, int? PageIndex, string Key, bool? ASC, int? DanhMucChaId, out int Totalrow)
        {
            Totalrow = 0;
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("StoreDanhMucTimKiemPhanTrang", DataService.GetInstance("DataAcessProvider"), "dbo");

            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@Key", Key, DbType.String, null, null);

            sp.Command.AddParameter("@ASC", ASC, DbType.Boolean, null, null);

            sp.Command.AddParameter("@DanhMucChaId", DanhMucChaId, DbType.Int32, 0, 10);

            sp.Command.AddOutputParameter("@total_row", DbType.Int32, 0, 10);
            return sp;
        }
        /// <summary>
        /// Creates an object wrapper for the StoreNguoiDungTimKiemPhanTrang Procedure
        /// </summary>
        public static StoredProcedure StoreBaiVietTimKiemPhanTrang(int? PageSize, int? PageIndex, string Key, bool? ASC, int? DanhMucChaId, out int Totalrow)
        {
            Totalrow = 0;
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("StoreBaiVietTimKiemPhanTrang", DataService.GetInstance("DataAcessProvider"), "dbo");

            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@Key", Key, DbType.String, null, null);

            sp.Command.AddParameter("@ASC", ASC, DbType.Boolean, null, null);

            sp.Command.AddParameter("@DanhMucChaId", DanhMucChaId, DbType.Int32, 0, 10);

            sp.Command.AddOutputParameter("@total_row", DbType.Int32, 0, 10);
            return sp;
        }
        /// <summary>
        /// Creates an object wrapper for the StoreVaiTroTimKiemPhanTrang Procedure
        /// </summary>
        public static StoredProcedure StoreVaiTroTimKiemPhanTrang(int? PageSize, int? PageIndex, string Key, bool? ASC, out int Totalrow)
        {
            Totalrow = 0;
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("StoreVaiTroTimKiemPhanTrang", DataService.GetInstance("DataAcessProvider"), "dbo");

            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@Key", Key, DbType.String, null, null);

            sp.Command.AddParameter("@ASC", ASC, DbType.Boolean, null, null);

            sp.Command.AddOutputParameter("@total_row", DbType.Int32, 0, 10);
            return sp;
        }


        /// <summary>
        /// Creates an object wrapper for the ThemVaiTroChoNguoiDung Procedure
        /// </summary>
        public static StoredProcedure ThemVaiTroChoNguoiDung(int? NguoiDungDuocSuaId, string DanhSachQuyenMoi)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("ThemVaiTroChoNguoiDung", DataService.GetInstance("DataAcessProvider"), "dbo");
        	
            sp.Command.AddParameter("@NguoiDungDuocSuaId", NguoiDungDuocSuaId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DanhSachQuyenMoi", DanhSachQuyenMoi, DbType.AnsiString, null, null);
        	
            return sp;
        }

        /// <summary>
        /// Creates an object wrapper for the StoreNguoiDungTimKiemPhanTrang Procedure
        /// </summary>
        public static StoredProcedure StoreDoiTacTimKiemPhanTrang(int? PageSize, int? PageIndex, string Key, bool? ASC, out int Totalrow)
        {
            Totalrow = 0;
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("StoreDoiTacTimKiemPhanTrang", DataService.GetInstance("DataAcessProvider"), "dbo");

            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@Key", Key, DbType.String, null, null);

            sp.Command.AddParameter("@ASC", ASC, DbType.Boolean, null, null);

            sp.Command.AddOutputParameter("@total_row", DbType.Int32, 0, 10);
            return sp;
        }
        /// <summary>
        /// Creates an object wrapper for the StoreNguoiDungTimKiemPhanTrang Procedure
        /// </summary>
        public static StoredProcedure StoreSlideTimKiemPhanTrang(int? PageSize, int? PageIndex, string Key, bool? ASC, out int Totalrow)
        {
            Totalrow = 0;
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("StoreSlideTimKiemPhanTrang", DataService.GetInstance("DataAcessProvider"), "dbo");

            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@Key", Key, DbType.String, null, null);

            sp.Command.AddParameter("@ASC", ASC, DbType.Boolean, null, null);

            sp.Command.AddOutputParameter("@total_row", DbType.Int32, 0, 10);
            return sp;
        }

        /// <summary>
        /// Creates an object wrapper for the StoreNguoiDungTimKiemPhanTrang Procedure
        /// </summary>
        public static StoredProcedure StoreMenuWebTrenTimKiemPhanTrang(int? PageSize, int? PageIndex, string Key, bool? ASC, int? DanhMucChaId, out int Totalrow)
        {
            Totalrow = 0;
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("StoreMenuWebTrenTimKiemPhanTrang", DataService.GetInstance("DataAcessProvider"), "dbo");

            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@Key", Key, DbType.String, null, null);

            sp.Command.AddParameter("@ASC", ASC, DbType.Boolean, null, null);

            sp.Command.AddParameter("@DanhMucChaId", DanhMucChaId, DbType.Int32, 0, 10);

            sp.Command.AddOutputParameter("@total_row", DbType.Int32, 0, 10);
            return sp;
        }
        /// <summary>
        /// Creates an object wrapper for the StoreNguoiDungTimKiemPhanTrang Procedure
        /// </summary>
        public static StoredProcedure StoreMenuWebDuoiTimKiemPhanTrang(int? PageSize, int? PageIndex, string Key, bool? ASC, int? DanhMucChaId, out int Totalrow)
        {
            Totalrow = 0;
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("StoreMenuWebDuoiTimKiemPhanTrang", DataService.GetInstance("DataAcessProvider"), "dbo");

            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@Key", Key, DbType.String, null, null);

            sp.Command.AddParameter("@ASC", ASC, DbType.Boolean, null, null);

            sp.Command.AddParameter("@DanhMucChaId", DanhMucChaId, DbType.Int32, 0, 10);

            sp.Command.AddOutputParameter("@total_row", DbType.Int32, 0, 10);
            return sp;
        }
        /// <summary>
        /// Creates an object wrapper for the StoreNguoiDungTimKiemPhanTrang Procedure
        /// </summary>
        public static StoredProcedure StoreLienHeTimKiemPhanTrang(int? PageSize, int? PageIndex, string Key, bool? ASC, out int Totalrow)
        {
            Totalrow = 0;
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("StoreLienHeTimKiemPhanTrang", DataService.GetInstance("DataAcessProvider"), "dbo");

            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@Key", Key, DbType.String, null, null);

            sp.Command.AddParameter("@ASC", ASC, DbType.Boolean, null, null);

            sp.Command.AddOutputParameter("@total_row", DbType.Int32, 0, 10);
            return sp;
        }
        /// <summary>
        /// Creates an object wrapper for the StoreNguoiDungTimKiemPhanTrang Procedure
        /// </summary>
        public static StoredProcedure StoreLichSuPhatTrienTimKiemPhanTrang(int? PageSize, int? PageIndex, string Key, bool? ASC, out int Totalrow)
        {
            Totalrow = 0;
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("StoreLichSuPhatTrienTimKiemPhanTrang", DataService.GetInstance("DataAcessProvider"), "dbo");

            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);

            sp.Command.AddParameter("@Key", Key, DbType.String, null, null);

            sp.Command.AddParameter("@ASC", ASC, DbType.Boolean, null, null);

            sp.Command.AddOutputParameter("@total_row", DbType.Int32, 0, 10);
            return sp;
        }

        /// <summary>B
        /// Creates an object wrapper for the GetAllMenuAndPermissionByIdUser Procedure
        /// </summary>
        public static StoredProcedure GetAllQuyenOfUser(int? UserId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetAllQuyenOfUser", DataService.GetInstance("DataAcessProvider"), "dbo");

            sp.Command.AddParameter("@UserId", UserId, DbType.Int32, 0, 10);

            return sp;
        }
    }
    
}
