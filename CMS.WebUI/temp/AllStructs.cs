using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SweetCMS.DataAccess
{
	#region Tables Struct
	public partial struct Tables
	{
		
		public static readonly string BaiViet = @"BaiViet";
        
		public static readonly string DanhMuc = @"DanhMuc";
        
		public static readonly string DefaultSetting = @"DefaultSetting";
        
		public static readonly string DoiTac = @"DoiTac";
        
		public static readonly string FileAttactment = @"FileAttactment";
        
		public static readonly string FriendlyUrl = @"FriendlyUrl";
        
		public static readonly string LichSuHeThong = @"LichSuHeThong";
        
		public static readonly string LichSuPhatTrien = @"LichSuPhatTrien";
        
		public static readonly string LienHe = @"LienHe";
        
		public static readonly string LoaiQuyen = @"LoaiQuyen";
        
		public static readonly string MenuAdmin = @"MenuAdmin";
        
		public static readonly string MenuWebDuoi = @"MenuWebDuoi";
        
		public static readonly string MenuWebTren = @"MenuWebTren";
        
		public static readonly string NganhDaoTao = @"NganhDaoTao";
        
		public static readonly string NguoiDung = @"NguoiDung";
        
		public static readonly string NguoiDungVaiTroChitiet = @"NguoiDung_VaiTro_Chitiet";
        
		public static readonly string NhomBaiViet = @"NhomBaiViet";
        
		public static readonly string NhomHinhAnh = @"NhomHinhAnh";
        
		public static readonly string TrinhChieuAnh = @"TrinhChieuAnh";
        
		public static readonly string VaiTro = @"VaiTro";
        
		public static readonly string VaiTroDanhMucLoaiQuyenChiTiet = @"VaiTro_DanhMuc_LoaiQuyen_ChiTiet";
        
		public static readonly string Video = @"Video";
        
	}
	#endregion
    #region Schemas
    public partial class Schemas {
		
		public static TableSchema.Table BaiViet
		{
            get { return DataService.GetSchema("BaiViet", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table DanhMuc
		{
            get { return DataService.GetSchema("DanhMuc", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table DefaultSetting
		{
            get { return DataService.GetSchema("DefaultSetting", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table DoiTac
		{
            get { return DataService.GetSchema("DoiTac", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table FileAttactment
		{
            get { return DataService.GetSchema("FileAttactment", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table FriendlyUrl
		{
            get { return DataService.GetSchema("FriendlyUrl", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table LichSuHeThong
		{
            get { return DataService.GetSchema("LichSuHeThong", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table LichSuPhatTrien
		{
            get { return DataService.GetSchema("LichSuPhatTrien", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table LienHe
		{
            get { return DataService.GetSchema("LienHe", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table LoaiQuyen
		{
            get { return DataService.GetSchema("LoaiQuyen", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table MenuAdmin
		{
            get { return DataService.GetSchema("MenuAdmin", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table MenuWebDuoi
		{
            get { return DataService.GetSchema("MenuWebDuoi", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table MenuWebTren
		{
            get { return DataService.GetSchema("MenuWebTren", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table NganhDaoTao
		{
            get { return DataService.GetSchema("NganhDaoTao", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table NguoiDung
		{
            get { return DataService.GetSchema("NguoiDung", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table NguoiDungVaiTroChitiet
		{
            get { return DataService.GetSchema("NguoiDung_VaiTro_Chitiet", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table NhomBaiViet
		{
            get { return DataService.GetSchema("NhomBaiViet", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table NhomHinhAnh
		{
            get { return DataService.GetSchema("NhomHinhAnh", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table TrinhChieuAnh
		{
            get { return DataService.GetSchema("TrinhChieuAnh", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table VaiTro
		{
            get { return DataService.GetSchema("VaiTro", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table VaiTroDanhMucLoaiQuyenChiTiet
		{
            get { return DataService.GetSchema("VaiTro_DanhMuc_LoaiQuyen_ChiTiet", "DataAcessProvider"); }
		}
        
		public static TableSchema.Table Video
		{
            get { return DataService.GetSchema("Video", "DataAcessProvider"); }
		}
        
	
    }
    #endregion
    #region View Struct
    public partial struct Views 
    {
		
    }
    #endregion
    
    #region Query Factories
	public static partial class DB
	{
        public static DataProvider _provider = DataService.Providers["DataAcessProvider"];
        static ISubSonicRepository _repository;
        public static ISubSonicRepository Repository 
        {
            get 
            {
                if (_repository == null)
                    return new SubSonicRepository(_provider);
                return _repository; 
            }
            set { _repository = value; }
        }
        public static Select SelectAllColumnsFrom<T>() where T : RecordBase<T>, new()
	    {
            return Repository.SelectAllColumnsFrom<T>();
	    }
	    public static Select Select()
	    {
            return Repository.Select();
	    }
	    
		public static Select Select(params string[] columns)
		{
            return Repository.Select(columns);
        }
	    
		public static Select Select(params Aggregate[] aggregates)
		{
            return Repository.Select(aggregates);
        }
   
	    public static Update Update<T>() where T : RecordBase<T>, new()
	    {
            return Repository.Update<T>();
	    }
	    
	    public static Insert Insert()
	    {
            return Repository.Insert();
	    }
	    
	    public static Delete Delete()
	    {
            return Repository.Delete();
	    }
	    
	    public static InlineQuery Query()
	    {
            return Repository.Query();
	    }
	    	    
	    
	}
    #endregion
    
}
#region Databases
public partial struct Databases 
{
	
	public static readonly string DataAcessProvider = @"DataAcessProvider";
    
}
#endregion